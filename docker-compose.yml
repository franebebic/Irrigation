services:

  postgres:
    image: postgres:15
    container_name: irrigation-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=irrigation
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - irrigation-net

  backend:
    build:
      context: ./irrigation-be
    container_name: irrigation-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - mosquitto
    environment:
      # Postgres
      - SPRING_DATASOURCE_URL
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      #MQTT
      - MQTT_BROKER_URL
      #KAFKA
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

    ports:
      - "8080:8080"
    networks:
      - irrigation-net

  decision-service:
    build:
      context: ./irrigation-decision-service
    container_name: irrigation-decision-service
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - irrigation-net

  frontend:
    build:
      context: ./irrigation-fe
    container_name: irrigation-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"  # NGINX servira frontend
    networks:
      - irrigation-net

  grafana:
    image: grafana/grafana
    container_name: irrigation-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true     # <-- DOPUÅ TA IFRAME

    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - postgres
    networks:
      - irrigation-net

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"     # MQTT
      - "9001:9001"     # optional: WebSocket
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped
    networks:
      - irrigation-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - irrigation-net

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - irrigation-net

volumes:
  pgdata:
  grafana-storage:

networks:
  irrigation-net:
    driver: bridge
