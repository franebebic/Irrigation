services:

  postgres:
    image: postgres:15
    container_name: irrigation-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=irrigation
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: ./irrigation-be
    container_name: irrigation-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - mosquitto
    environment:
      # Postgres
      - SPRING_DATASOURCE_URL
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      #MQTT
      - MQTT_BROKER_URL

    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./irrigation-fe
    container_name: irrigation-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"  # NGINX servira frontend

  grafana:
    image: grafana/grafana
    container_name: irrigation-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true     # <-- DOPUÅ TA IFRAME

    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - postgres

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"     # MQTT
      - "9001:9001"     # optional: WebSocket
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped

volumes:
  pgdata:
  grafana-storage:
