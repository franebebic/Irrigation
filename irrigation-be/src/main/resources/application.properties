spring.application.name=irrigation
spring.mvc.problem-details.enabled=false
spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=jdbc:postgresql://localhost:5432/irrigation
spring.datasource.username=postgres
spring.datasource.password=postgres

server.address=0.0.0.0
server.port=8080


spring.mvc.servlet.path=/api

#MOSQUITTO
mqtt.broker=${mqtt.broker.url}
mqtt.subscriber-client-id=irrigation-backend-subscriber
mqtt.publisher-client-id=irrigation-backend-publisher
mqtt.sensors-topic=sensors/+/data
mqtt.sim-topic=sim/irrigation/

#KAFKA
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=com.fb.irrigation.kafka.command

spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.properties.spring.json.type.mapping=com.fb.irrigation_decision_service.model.IrrigationCommandEvent:com.fb.irrigation.kafka.command.IrrigationCommandEvent

kafka.topics.measurement=measurement.created
kafka.topics.decision-context=decision_context.created
kafka.topics.irrigation-command=irrigation.command

logging.level.com.fb.irrigation.service=DEBUG
logging.level.com.fb.irrigation=WARN
logging.level.com.fb.irrigation.kafka.service=DEBUG
logging.level.com.fb.irrigation.context=INFO
logging.level.com.fb.irrigation.kafka.listener=INFO
logging.level.com.fb.irrigation.service.ValveServiceImpl=INFO


